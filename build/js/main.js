"use strict";

(function () {
  document.addEventListener("DOMContentLoaded", function () {
    var slides = document.querySelectorAll(".race__item");
    var slideMoveLeft = document.querySelector(".race__nav-left");
    var slideMoveRight = document.querySelector(".race__nav-right");
    var slideCounter = document.querySelector(".race__nav-counter");
    var betTables = document.querySelectorAll(".bet__item");
    var resultsFirst = document.querySelector(".results__first");
    var resultsSecond = document.querySelector(".results__second");
    var resultsThird = document.querySelector(".results__third");
    var currentRace = 3;
    slides.forEach(function (slide, i) {
      if (i < currentRace) {
        slide.classList.add("_done");
      }
      if (i > currentRace) {
        slide.classList.add("_lock");
      }
    });
    var currentSlide = currentRace;
    function updateSlider(index) {
      slides.forEach(function (slide) {
        return slide.classList.remove("_active");
      });
      slides[index].classList.add("_active");
      slideCounter.textContent = "".concat(index + 1, "/").concat(slides.length);
      betTables.forEach(function (table) {
        if (currentSlide > currentRace) {
          table.classList.add("_lock");
        }
        if (currentSlide < currentRace) {
          table.classList.add("_done");
        }
        if (currentSlide === currentRace) {
          table.classList.remove("_lock", "_done");
        }
      });
    }
    function moveSlide(direction) {
      var currentBolid = slides[currentSlide].querySelector(".race__bolid");
      currentBolid.classList.add("_move");
      var nextSlide = direction === "next" ? currentSlide + 1 : currentSlide - 1;
      if (nextSlide < 0) nextSlide = slides.length - 1;
      if (nextSlide >= slides.length) nextSlide = 0;
      var nextBolid = slides[nextSlide].querySelector(".race__bolid");
      nextBolid.classList.add("_arrive");
      slides[currentSlide].classList.add("_opacity");
      setTimeout(function () {
        currentBolid.classList.remove("_move");
        nextBolid.classList.remove("_arrive");
        currentSlide = nextSlide;
        updateSlider(currentSlide);
        slides.forEach(function (slide) {
          slide.classList.remove("_opacity");
        });
      }, 1500);
    }
    slideMoveLeft.addEventListener("click", function () {
      moveSlide("prev");
      document.querySelector(".race__nav").style.pointerEvents = "none";
      setTimeout(function () {
        document.querySelector(".race__nav").style.pointerEvents = "initial";
      }, 2000);
    });
    slideMoveRight.addEventListener("click", function () {
      moveSlide("next");
      document.querySelector(".race__nav").style.pointerEvents = "none";
      setTimeout(function () {
        document.querySelector(".race__nav").style.pointerEvents = "initial";
      }, 2000);
    });
    updateSlider(currentSlide);
    function startCountdown(endTime) {
      var daysEls = document.querySelectorAll(".timer__days-item");
      var hoursEls = document.querySelectorAll(".timer__hours-item");
      var minutesEls = document.querySelectorAll(".timer__minutes-item");
      function updateTimer() {
        var now = new Date().getTime();
        var timeLeft = endTime - now;
        if (timeLeft <= 0) {
          clearInterval(timerInterval);
          updateDigits(daysEls, "00");
          updateDigits(hoursEls, "00");
          updateDigits(minutesEls, "00");
          return;
        }
        var days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        var hours = Math.floor(timeLeft / (1000 * 60 * 60) % 24);
        var minutes = Math.floor(timeLeft / (1000 * 60) % 60);
        updateDigits(daysEls, String(days).padStart(2, "0"));
        updateDigits(hoursEls, String(hours).padStart(2, "0"));
        updateDigits(minutesEls, String(minutes).padStart(2, "0"));
      }
      function updateDigits(elements, value) {
        elements[0].textContent = value[0];
        elements[1].textContent = value[1];
      }
      updateTimer();
      var timerInterval = setInterval(updateTimer, 60000);
    }
    var now = new Date();
    var endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0, 23, 59).getTime();
    startCountdown(endOfMonth);
    function startSmoke(carSelector, smokeClass, maxCount, interval, delay, fadeTime, removeDelay) {
      var extraClass = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : '';
      var activeClass = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
      var cars = document.querySelectorAll(carSelector);
      cars.forEach(function (car) {
        if (!car) return;
        console.log(car.parentElement.parentElement.classList.contains("_active"));
        function createSmoke() {
          if (activeClass) {
            if (!car || !car.parentElement.parentElement.classList.contains("_active")) return;
          }
          if (car.querySelectorAll(".".concat(smokeClass).concat(extraClass ? ".".concat(extraClass) : '')).length < maxCount) {
            var smoke = document.createElement('div');
            smoke.classList.add(smokeClass);
            if (extraClass) smoke.classList.add(extraClass);
            car.appendChild(smoke);
            setTimeout(function () {
              return smoke.classList.add("_opacity");
            }, fadeTime);
            setTimeout(function () {
              return smoke.remove();
            }, fadeTime + removeDelay);
          }
        }
        createSmoke();
        setTimeout(createSmoke, delay);
        setInterval(function () {
          createSmoke();
          setTimeout(createSmoke, delay);
        }, interval);
      });
    }
    startSmoke('.race__bolid-car', 'race__bolid-smoke-front', 4, 900, 500, 200, 1600, "", true);
    startSmoke('.race__bolid-car', 'race__bolid-smoke-back', 8, 900, 500, 200, 1600, "", true);
    startSmoke('.race__bolid-car', 'race__bolid-smoke-back', 4, 900, 500, 200, 1600, "_large", true);
    startSmoke('.welcome__pers-smoke-front', 'front-before', 4, 900, 500, 200, 1600, "", false);
    startSmoke('.welcome__pers-smoke-back', 'front-before', 4, 900, 500, 200, 1600, "", false);
    function setPopups(triggerButton, popupClass) {
      var popupsContainer = document.querySelector('.popups');
      var popup = document.querySelector(".popups__item.".concat(popupClass));
      if (!triggerButton || !popup || !popupsContainer) return;
      triggerButton.addEventListener('click', function () {
        popupsContainer.classList.remove('_opacity');
        popupsContainer.classList.add(popupClass);
        document.body.style.overflow = 'hidden';
      });
      var closeButton = popup.querySelector('.popups__item-close');
      popupsContainer.addEventListener("click", function (e) {
        if (e.target === popupsContainer || e.target === closeButton) {
          closePopup();
        }
      });
      function closePopup() {
        popupsContainer.classList.add('_opacity');
        popupsContainer.classList.remove(popupClass);
        document.body.style.overflow = '';
      }
    }
    setPopups(document.querySelector('.bet__btn-item'), '_betPopup');
    setPopups(document.querySelector('.confirm__upd-btn'), '_confirmPopup');
    setPopups(document.querySelector('.results__popup-btn'), '_resultsPopup');
    function animateOnScroll(element, animationClass, delay) {
      var options = {
        root: null,
        rootMargin: '0px',
        threshold: 0.2
      };
      var observer = new IntersectionObserver(function (entries) {
        entries.forEach(function (entry) {
          if (entry.isIntersecting) {
            setTimeout(function () {
              entry.target.classList.add(animationClass);
            }, delay);
          } else {
            entry.target.classList.remove(animationClass);
          }
        });
      }, options);
      observer.observe(element);
    }
    animateOnScroll(resultsFirst.querySelector(".results__top-decor"), "_show", 0);
    animateOnScroll(resultsSecond.querySelector(".results__top-decor"), "_show", 400);
    animateOnScroll(resultsThird.querySelector(".results__top-decor"), "_show", 800);
    animateOnScroll(resultsFirst.querySelector(".results__top-wrap"), "_show", 0);
    animateOnScroll(resultsSecond.querySelector(".results__top-wrap"), "_show", 400);
    animateOnScroll(resultsThird.querySelector(".results__top-wrap"), "_show", 800);
  });
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
