"use strict";

(function () {
  document.addEventListener("DOMContentLoaded", function () {
    var slides = document.querySelectorAll(".race__item");
    var slideMoveLeft = document.querySelector(".race__nav-left");
    var slideMoveRight = document.querySelector(".race__nav-right");
    var slideCounter = document.querySelector(".race__nav-counter");
    var currentSLide = 0;

    // slides.forEach((slide, i) =>{
    //
    // })

    function setSlider(slides) {}
    function startCountdown(endTime) {
      var daysEls = document.querySelectorAll(".timer__days-item");
      var hoursEls = document.querySelectorAll(".timer__hours-item");
      var minutesEls = document.querySelectorAll(".timer__minutes-item");
      function updateTimer() {
        var now = new Date().getTime();
        var timeLeft = endTime - now;
        if (timeLeft <= 0) {
          clearInterval(timerInterval);
          updateDigits(daysEls, "00");
          updateDigits(hoursEls, "00");
          updateDigits(minutesEls, "00");
          return;
        }
        var days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        var hours = Math.floor(timeLeft / (1000 * 60 * 60) % 24);
        var minutes = Math.floor(timeLeft / (1000 * 60) % 60);
        updateDigits(daysEls, String(days).padStart(2, "0"));
        updateDigits(hoursEls, String(hours).padStart(2, "0"));
        updateDigits(minutesEls, String(minutes).padStart(2, "0"));
      }
      function updateDigits(elements, value) {
        elements[0].textContent = value[0];
        elements[1].textContent = value[1];
      }
      updateTimer();
      var timerInterval = setInterval(updateTimer, 60000);
    }
    var now = new Date();
    var endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0, 23, 59).getTime();
    startCountdown(endOfMonth);
    function startSmoke(carSelector, smokeClass, maxCount, interval, delay, fadeTime, removeDelay) {
      var extraClass = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : '';
      var activeClass = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
      var car = document.querySelector(carSelector);
      function createSmoke() {
        if (activeClass) {
          if (!car || !car.parentElement.parentElement.classList.contains("_active")) return;
        }
        if (car.querySelectorAll(".".concat(smokeClass).concat(extraClass ? ".".concat(extraClass) : '')).length < maxCount) {
          var smoke = document.createElement('div');
          smoke.classList.add(smokeClass);
          if (extraClass) smoke.classList.add(extraClass);
          car.appendChild(smoke);
          setTimeout(function () {
            return smoke.classList.add("_opacity");
          }, fadeTime);
          setTimeout(function () {
            return smoke.remove();
          }, fadeTime + removeDelay);
        }
      }
      createSmoke();
      setTimeout(createSmoke, delay);
      setInterval(function () {
        createSmoke();
        setTimeout(createSmoke, delay);
      }, interval);
    }
    // startSmoke('.race__bolid-car', 'race__bolid-smoke-front', 4, 900, 500, 100, 800, "", true);
    // startSmoke('.race__bolid-car', 'race__bolid-smoke-back', 8, 900, 500, 100, 800, "", true);
    // startSmoke('.race__bolid-car', 'race__bolid-smoke-back', 4, 900, 500, 100, 800, "_large", true);
    // startSmoke('.welcome__pers-smoke-front', 'front-before', 4, 900, 500, 100, 800, "", false);
    // startSmoke('.welcome__pers-smoke-back', 'front-before', 4, 900, 500, 100, 800, "", false);

    startSmoke('.race__bolid-car', 'race__bolid-smoke-front', 4, 900, 500, 200, 1600, "", true);
    startSmoke('.race__bolid-car', 'race__bolid-smoke-back', 8, 900, 500, 200, 1600, "", true);
    startSmoke('.race__bolid-car', 'race__bolid-smoke-back', 4, 900, 500, 200, 1600, "_large", true);
    startSmoke('.welcome__pers-smoke-front', 'front-before', 4, 900, 500, 200, 1600, "", false);
    startSmoke('.welcome__pers-smoke-back', 'front-before', 4, 900, 500, 200, 1600, "", false);
  });
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
